package browserStack;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.Set;
import java.util.concurrent.TimeUnit;
import java.lang.Thread;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
class TestClass1 implements Runnable {
	public void run() {
		Hashtable<String, String> capsHashtable = new Hashtable<String, String>();
		capsHashtable.put("device", "iPhone 12 Pro");
		capsHashtable.put("real_mobile", "true");
		capsHashtable.put("os_version", "14");
		capsHashtable.put("build", "Homework Build");
		capsHashtable.put("name", "Thread 1");
		Homework r1 = new Homework();
		r1.executeTest(capsHashtable);
  }
}
class TestClass2 implements Runnable {
  public void run() {
		Hashtable<String, String> capsHashtable = new Hashtable<String, String>();
		capsHashtable.put("browserName", "Chrome");
		capsHashtable.put("browser_version", "latest");
		capsHashtable.put("os", "Windows");
		capsHashtable.put("os_version", "10");
		capsHashtable.put("build", "Homework Build");
		capsHashtable.put("name", "Thread 2");
		Homework r1 = new Homework();
    r1.executeTest(capsHashtable);
  }
}
class TestClass3 implements Runnable {
	public void run() {
		Hashtable<String, String> capsHashtable = new Hashtable<String, String>();
		capsHashtable.put("browser", "safari");
		capsHashtable.put("browser_version", "14");
		capsHashtable.put("os", "OS X");
		capsHashtable.put("os_version", "Big Sur");
		capsHashtable.put("build", "Homework Build");
		capsHashtable.put("name", "Thread 3");
		Homework r1 = new Homework();
    r1.executeTest(capsHashtable);
  }
}
class TestClass4 implements Runnable {
	public void run() {
		Hashtable<String, String> capsHashtable = new Hashtable<String, String>();
		capsHashtable.put("browserName", "Firefox");
		capsHashtable.put("browser_version", "latest");
		capsHashtable.put("os", "Windows");
		capsHashtable.put("os_version", "7");
		capsHashtable.put("build", "Homework Build");
		capsHashtable.put("name", "Thread 4");
		Homework r1 = new Homework();
    r1.executeTest(capsHashtable);
  }
}
class TestClass5 implements Runnable {
	public void run() {
		Hashtable<String, String> capsHashtable = new Hashtable<String, String>();
		capsHashtable.put("browserName", "Edge");
		capsHashtable.put("browser_version", "latest");
		capsHashtable.put("os", "Windows");
		capsHashtable.put("os_version", "10");
		capsHashtable.put("build", "Homework Build");
		capsHashtable.put("name", "Thread 5");
		Homework r1 = new Homework();
    r1.executeTest(capsHashtable);
  }
}
public class Homework {
  public static final String USERNAME = "leevardaro_sqiF2Y";
  public static final String AUTOMATE_KEY = "XNR17aPXPp6NaNZNvyD2";
  public static final String URL = "https://" + USERNAME + ":" + AUTOMATE_KEY + "@hub-cloud.browserstack.com/wd/hub";
  public static void main(String[] args) throws Exception {
	Thread object1 = new Thread(new TestClass1());
    object1.start();
    Thread object2 = new Thread(new TestClass2());
    object2.start();
    Thread object3 = new Thread(new TestClass3());
    object3.start();
    Thread object4 = new Thread(new TestClass4());
    object4.start();
    Thread object5 = new Thread(new TestClass5());
    object5.start();
  }
	public void executeTest(Hashtable<String, String> capsHashtable) {
		String key;
	  DesiredCapabilities caps = new DesiredCapabilities();
		// Iterate over the hashtable and set the capabilities
		Set<String> keys = capsHashtable.keySet();
    Iterator<String> itr = keys.iterator();
    while (itr.hasNext()) {
       key = itr.next();
       caps.setCapability(key, capsHashtable.get(key));
    }
    WebDriver driver;
		try {
			driver = new RemoteWebDriver(new URL(URL), caps);
	    JavascriptExecutor jse = (JavascriptExecutor)driver;
        String baseUrl = "https://jobs.workable.com/";

        WebDriverWait wait = new WebDriverWait(driver, 10);
        // launch browsers on job search site
        driver.get(baseUrl);
        //input job
        WebElement jobSearch = driver.findElement(By.xpath("//*[@data-ui=\'search-input\']"));
        jobSearch.sendKeys("browserstack customer experience engineer");
        //input location and submit
        WebElement locSearch = driver.findElement(By.xpath("//*[@data-ui=\'location-input\']"));
        locSearch.sendKeys("San Francisco");
        locSearch.submit();
        // get rid of cookie bar
        WebElement declineLink = driver.findElement(By.xpath("//*[@id='hs-eu-decline-button']"));
        declineLink.click();
        //click on job
        WebElement jobLink = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//h3[.='Customer Engineer- San Francisco']/..//a[@data-ui='job-view']")));
        jobLink.click();
        //verify job
	    try {
	    	wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//h1[.='Customer Engineer- San Francisco']")));
	    	jse.executeScript("browserstack_executor: {\"action\": \"setSessionStatus\", \"arguments\": {\"status\": \"passed\", \"reason\": \"Correct Job!\"}}");
	    }
	    catch(Exception e) {
	    	jse.executeScript("browserstack_executor: {\"action\": \"setSessionStatus\", \"arguments\": {\"status\":\"failed\", \"reason\": \"Incorrect Job\"}}");
	    }
	    
	    //close driver
	    driver.quit();
		} catch (MalformedURLException e) {
			e.printStackTrace();
		}
	}
}